<!DOCTYPE html>
<html lang="en">
<head>
    <title>Twitch Chat-Stats</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=yes">
    <meta charset="utf-8">
    <meta name="author" content="Eisenfutzi">
    <style>
        html, body {
            margin: 0;
            height: 100%;
            font-family: system-ui;
            background: #2D2D2D;
            color: #EFEFEF;
        }

        *, ::after, ::before {
            box-sizing: border-box;
        }

        .container {
            max-width: 100%;
            margin-right: unset;
            margin-left: unset;
        }

        .row {
            --bs-gutter-x: 1.5rem;
            --bs-gutter-y: 0;
            display: flex;
            flex-wrap: wrap;
        }

        .row > * {
            flex-shrink: 0;
            width: 100%;
            max-width: 100%;
            padding-right: calc(var(--bs-gutter-x) * .5);
            padding-left: calc(var(--bs-gutter-x) * .5);
        }

        .col-8 {
            flex: 0 0 auto;
            width: 66.66666667%;
        }

        .col-4 {
            flex: 0 0 auto;
            width: 33.33333333%;
        }

        ::-webkit-scrollbar {
            width: 8px;
            height: 4px;
            transition: all .1s linear;
            border-radius: 50%;
        }

        ::-webkit-scrollbar-track {
          background: transparent;
        }

        ::-webkit-scrollbar-track:hover {
            background: rgba(0,0,0,.2)
        }

        ::-webkit-scrollbar-thumb {
            background: #a5abb1;
        }
    </style>
    <style>
        /* https://www.w3schools.com/howto/howto_css_switch.asp */
        /* The switch - the box around the slider */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        /* Hide default HTML checkbox */
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        /* The slider */
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }
    </style>
    <style>
        li { list-style-type: none; }

        ul { padding-inline-start: 0px; }

        #stats { font-size: 150%; }

        li.user { background: #cc66ee; color: #000; }
        li.first { background: #00ff00; color: #000; }
        li.deleted { background: #e4ff00; color: #000; }
        li.banned { background: #ff0000; color: #000; }
        li.timeout { background: #ffa500; color: #000; }

        input[type="button"] {
            background-color: #008CBA;
            border: none;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            border-radius: 10px;
            cursor: pointer;
        }

        #banned-users-box {
            width: 325px;
            z-index: 10;
            position:absolute;
            top: 50px;
            left: -webkit-calc(50% - 162px);
            background: #ed2323;
            border-radius: 50px;
            text-align: center;
        }

        #banned-users-box > textarea {
            width: 275px;
        }
    </style>
    <style id="style-user"></style>
    <style id="style-first"></style>
    <style id="style-deleted"></style>
    <style id="style-banned"></style>
    <style id="style-timeout"></style>

    <script src="//code.jquery.com/jquery-3.5.0.min.js"></script>
    <script src="//github.com/tmijs/tmi.js/releases/download/v1.8.5/tmi.min.js"></script>
    <script>
    $( document ).ready(function() {
        console.log( "document loaded" );
    });

    $( window ).on( "load", function() {
        console.log( "window loaded" );
    });
    </script>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-8 chat">
                <ul id="chat"></ul>
            </div>
            <div class="col-4 stats">
                <div id="stats">
                    <ul id="stats1"></ul>
                    <ul id="stats2"></ul>
                    <ul id="stats3">
                       <li class="user">
                            <label class="switch">
                                <input type="checkbox" id="stats3-user-cb" checked>
                                <span class="slider"></span>
                            </label>
                            <b>user</b>: <span id="stats3-user"></span>
                        </li>
                        <li class="first">
                            <label class="switch">
                                <input type="checkbox" id="stats3-first-cb" checked>
                                <span class="slider"></span>
                            </label>
                            <b>First-Time Chatter</b>: <span id="stats3-first"></span>
                        </li>
                        <li class="deleted">
                            <label class="switch">
                                <input type="checkbox" id="stats3-deleted-cb" checked>
                                <span class="slider"></span>
                            </label>
                            <b>Deleted</b>: <span id="stats3-deleted"></span>
                        </li>
                        <li class="timeout">
                            <label class="switch">
                                <input type="checkbox" id="stats3-timeout-cb" checked>
                                <span class="slider"></span>
                            </label>
                            <b>Timeout</b>: <span id="stats3-timeout"></span>
                        </li>
                        <li class="banned">
                            <label class="switch">
                                <input type="checkbox" id="stats3-banned-cb" checked>
                                <span class="slider"></span>
                            </label>
                            <b>Banned</b>: <span id="stats3-banned"></span>
                        </li>
                    </ul>
                    <ul id="stats4"></ul>
                    <input type="button" id="banned-users-open" value="Banned Users">
                </div>
            </div>

            <div id="banned-users-box" style="display: none;">
                <h2>Banned Users</h2>
                <input type="button" id="banned-users-close" value="close"><br><br>
                <textarea id="banned-users"></textarea>
                <br><br><br>
            </div>
        </div>
    </div>
    <script>
    (function () {
        var msg_total = 0;
        var user = 0;
        var msg_first = 0;
        var msg_deleted = 0;
        var banned = 0;
        var timeout = 0;
        var unique_users = 0;
        var channel = "Eisenfutzi";
        var dev = false;

        // Parse channel parameter
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        if (urlParams.has('dev')) dev = true;
        if (urlParams.has('channel')) {
            channel = urlParams.get('channel');
        } else {
            window.location.href = "?channel=Eisenfutzi";
        }
        document.title = channel + ' Stats';

        const client = new tmi.Client({
            options: {
                debug: false,
                messagesLogLevel: "info"
            },
            connection: {
                reconnect: true,
                secure: true
            },
            channels: [channel]
        });
        client.connect().catch(console.error);

        client.on("connecting", (address, port) => { ping(); });
        client.on("connected", (address, port) => { ping(); });
        client.on("disconnected", (reason) => { ping(); });
        client.on("clearchat", (channel) => { console.log(channel); });

        client.on('message', (channel, tags, message, self) => {
            if (self) return;

            msg_total++;

            if (!unique_users.includes(tags['username'])) unique_users.push(tags['username']);

            if (tags['first-msg'] === true) {
                msg_first++;

                $("#chat").prepend(genLi('first', '<b>' + tags['username'] + '</b>: ' + htmlEntities(message)));
            } else {
                if (dev) $("#chat").prepend(genLi('', '<b>' + tags['username'] + '</b>: ' + htmlEntities(message)));
            }
        });

        client.on("ban", (channel, username, reason, userstate) => {
            banned++;
            $("#chat").prepend(genLi('banned', '<b>' + username + '</b> htmlEntities(deletedMessage)));
            updateBannedUsers(username);
        });

        client.on("messagedeleted", (channel, username, deletedMessage, userstate) => {
            msg_deleted++;
            $("#chat").prepend(genLi('deleted', '<b>' + username + '</b>: ' + htmlEntities(deletedMessage)));
        });

        client.on("timeout", (channel, username, reason, duration, userstate) => {
            timeout++;
            $("#chat").prepend(genLi('timeout', '<b>' + username + '</b> timeout ' + duration + 's'));
        });

        client.on("raw_message", (messageCloned, message) => {
            msg_irc++;
            if (message.raw.includes("CLEARCHAT") && dev) console.log(message);
            if (message.raw.includes("JOIN") && dev) console.log(message);
            window.setTimeout(genStats, 250);
        });

        $('#banned-users-open').click(function() {
            $('#banned-users-box').show();
            updateBannedUsers();
        });

        $('#banned-users-close').click(function() {
            $('#banned-users-box').hide();
        });

        $('#stats3-user-cb').change(function() {
            if(!this.checked) $('#style-user').html('#chat > li.user { display: none; }');
            if(this.checked) $('#style-user').html('#chat > li.user { display: inherit; }');
        });

        $('#stats3-first-cb').change(function() {
            if(!this.checked) $('#style-first').html('#chat > li.first { display: none; }');
            if(this.checked) $('#style-first').html('#chat > li.first { display: inherit; }');
        });

        $('#stats3-deleted-cb').change(function() {
            if(!this.checked) $('#style-deleted').html('#chat > li.deleted { display: none; }');
            if(this.checked) $('#style-deleted').html('#chat > li.deleted { display: inherit; }');  
        });

        $('#stats3-banned-cb').change(function() {
            if(!this.checked) $('#style-banned').html('#chat > li.banned { display: none; }');
            if(this.checked) $('#style-banned').html('#chat > li.banned { display: inherit; }');  
        });

        $('#stats3-timeout-cb').change(function() {
            if(!this.checked) $('#style-timeout').html('#chat > li.timeout { display: none; }');
            if(this.checked) $('#style-timeout').html('#chat > li.timeout { display: inherit; }');  
        });

        function updateBannedUsers(user = "") {
            var box = document.getElementById("banned-users");

            if (user) box.value += user + "\n";

            box.style.height = "";
            box.style.height = (box.scrollHeight + 5) + "px";
        }

        function ping() {
            client.ping()
            .then((data) => {
                latency = data + 's';
            }).catch((err) => {
                latency = err;
            });

            genStats();
        }
        setInterval(ping, 60 * 1000);

        function genLi(class_name, text, time = true) {
            if (!time) return '<li class="' + class_name + '">' + text + '</li>';
            return '<li class="' + class_name + '">[' + timestamp() + '] ' + text + '</li>';
        }

        function genStats() {
            $("#stats1").html(
                '<li><b>Total-MSG</b>: ' + msg_total + '</li>'
                + '<li><b>Unique-Users</b>: ' + unique_users.length + '</li>'
                + '<li><b>MSG per User</b>: ' + (msg_total / unique_users.length).toFixed(2) + '</li>'
                + '<li><b>MSG per Minute</b>: ' + msgPerMinute(msg_total) + '</li>'
            );

            $("#stats3-user").text(msg_user + ' (' + genPerc(msg_user, users.length) + '%)');
            $("#stats3-first").text(msg_first + ' (' + genPerc(msg_first, unique_users.length) + '%)');
            $("#stats3-deleted").text(msg_deleted + ' (' + genPerc(msg_deleted, msg_total) + '%)');
            $("#stats3-timeout").text(timeout + ' (' + genPerc(timeout, unique_users.length) + '%)');
            $("#stats3-banned").text(banned + ' (' + genPerc(banned, unique_users.length) + '%)');

            $("#stats4").html(
                + '<li><b>Join MSG</b>: ' + irc_join + '</li>'
                + '<li><b>Part MSG</b>: ' + irc_part + '</li>'
                + '<li><b>Latency</b>: ' + latency + '</li>'
            );
        }

        function genPerc(partial, total) {
            return ((partial / total) * 100).toFixed(2);
        }

        function timestamp(datum = new Date()) {
            const timestamp = datum.toISOString().replace(/T/, ' ').replace(/\..+/, '');
            return timestamp;
        }

        function htmlEntities(html) {
            function it() {
                return html.map(function(n, i, arr) {
                    if(n.length == 1) {
                        return n.replace(/[\u00A0-\u9999<>\&]/gim, function(i) {
                            return '&#' + i.charCodeAt(0) + ';';
                        });
                    }
                    return n;
                });
            }

            var isArray = Array.isArray(html);
            if (!isArray) html = html.split('');
            html = it(html);
            if (!isArray) html = html.join('');

            return html;
        }
    })();
    </script>
</body>
</html>
